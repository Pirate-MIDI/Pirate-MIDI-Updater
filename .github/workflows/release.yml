name: Release
on:
  push:
    branches:
      - main
jobs:
  # Job that allows the creation of the release
  release_please:
    name: Release Please
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.release.outputs.tag_name }}
      release_id: ${{ steps.release.outputs.id }}
      upload_url: ${{ steps.release.outputs.upload_url }}
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node

  # Job that builds the executables
  build_tauri:
    name: "Build and upload release binaries"
    needs: release_please
    if: ${{ needs.release_please.outputs.release_created }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: setup rust cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "ahoy"
          shared-key: "tauri-release"
          workspaces: src-tauri

      - name: install rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: make dist dir
        run: mkdir dist

      - name: install app dependencies and build it
        run: yarn install && yarn build

      - name: windows - build driver installer
        if: matrix.platform == 'windows-latest'
        run: re-pack-files
        shell: cmd
        working-directory: src-tauri\wix\drivers

      - name: Set providerShortName in tauri.conf.json
        if: matrix.platform == 'macos-latest'
        uses: jossef/action-set-json-field@v2.1
        with:
          file: src-tauri/tauri.conf.json
          field: tauri.bundle.macOS.providerShortName
          value: ${{ secrets.APPLE_TEAM_ID }}

      - name: Set signingIdentity in tauri.conf.json
        if: matrix.platform == 'macos-latest'
        uses: jossef/action-set-json-field@v2.1
        with:
          file: src-tauri/tauri.conf.json
          field: tauri.bundle.macOS.signingIdentity
          value: ${{ secrets.APPLE_SIGNING_IDENTITY }}

      - uses: tauri-apps/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
        with:
          releaseId: ${{ needs.release_please.outputs.release_id }}

  create_update_json:
    name: "Create latest.json file"
    needs: [release_please, build_tauri]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - run: mkdir -p _output

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: updater

      - name: install rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Generate update.json
        run: cargo run > ../_output/latest.json
        working-directory: updater

      - name: remove old latest.json
        uses: flcdrg/remove-release-asset-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.release_please.outputs.release_id }}
          asset_name: latest.json

      - name: upload new latest.json
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release_please.outputs.upload_url }}
          asset_path: _output/latest.json
          asset_name: latest.json
          asset_content_type: application/json
