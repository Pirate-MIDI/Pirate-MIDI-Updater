name: Release
on:
  push:
    branches:
      - main

jobs:
  # Job that allows the creation of the release
  release_please:
    name: Release Please
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.release.outputs.tag_name }}
      release_id: ${{ steps.release.outputs.id }}
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node

  # Job that builds the executables
  build_tauri:
    name: "Build and upload release binaries"
    needs: release_please
    if: ${{ needs.release_please.outputs.release_created }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            delay: 0
          - platform: ubuntu-20.04
            delay: 90
          - platform: windows-latest
            delay: 180

    runs-on: ${{ matrix.platform }}
    steps:
      # introduce a delay due to concurrency issues with the latest.json
      - name: unix - sleep for ${{matrix.delay}} seconds
        if: matrix.platform != 'windows-latest'
        run: sleep ${{matrix.delay}}
        shell: bash

      - name: windows - sleep for ${{matrix.delay}} seconds
        if: matrix.platform == 'windows-latest'
        run: Start-Sleep -s ${{matrix.delay}}
        shell: powershell

      - name: checkout repository
        uses: actions/checkout@v3

      - name: setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm

      - name: install rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: cache rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: make dist dir
        run: mkdir dist

      - name: install app dependencies and build it
        run: pnpm install && pnpm build

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path src-tauri/Cargo.toml

      - name: windows - build driver installer
        if: matrix.platform == 'windows-latest'
        run: re-pack-files
        shell: cmd
        working-directory: src-tauri\wix\drivers

      - uses: tauri-apps/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
        with:
          tagName: ${{ needs.release_please.outputs.tag_name }}
          releaseId: ${{ needs.release_please.outputs.release_id }}
          tauriScript: pnpm tauri
          # args: --verbose
